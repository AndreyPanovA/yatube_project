<<<<<<< HEAD
from pathlib import Path

from asgiref.local import Local

from django.apps import apps


def _is_django_module(module):
    """Return True if the given module is nested under Django."""
    return module.__name__.startswith('django.')


=======
import threading
from pathlib import Path

from django.apps import apps


>>>>>>> 0efae6b8ba0995009ac8fdaa5b7c1f9fa1ac2988
def watch_for_translation_changes(sender, **kwargs):
    """Register file watchers for .mo files in potential locale paths."""
    from django.conf import settings

    if settings.USE_I18N:
        directories = [Path('locale')]
<<<<<<< HEAD
        directories.extend(
            Path(config.path) / 'locale'
            for config in apps.get_app_configs()
            if not _is_django_module(config.module)
        )
=======
        directories.extend(Path(config.path) / 'locale' for config in apps.get_app_configs())
>>>>>>> 0efae6b8ba0995009ac8fdaa5b7c1f9fa1ac2988
        directories.extend(Path(p) for p in settings.LOCALE_PATHS)
        for path in directories:
            sender.watch_dir(path, '**/*.mo')


def translation_file_changed(sender, file_path, **kwargs):
    """Clear the internal translations cache if a .mo file is modified."""
    if file_path.suffix == '.mo':
        import gettext
<<<<<<< HEAD

=======
>>>>>>> 0efae6b8ba0995009ac8fdaa5b7c1f9fa1ac2988
        from django.utils.translation import trans_real
        gettext._translations = {}
        trans_real._translations = {}
        trans_real._default = None
<<<<<<< HEAD
        trans_real._active = Local()
=======
        trans_real._active = threading.local()
>>>>>>> 0efae6b8ba0995009ac8fdaa5b7c1f9fa1ac2988
        return True
